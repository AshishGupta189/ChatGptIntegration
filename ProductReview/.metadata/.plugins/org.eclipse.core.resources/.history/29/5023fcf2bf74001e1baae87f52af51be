package com.masai.Controller;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.masai.Entity.Product;
import com.masai.Entity.Review;
import com.masai.Exception.ProductException;
import com.masai.Exception.ReviewException;
import com.masai.Service.ServiceImplimentation;

@RestController
@RequestMapping("/api")
public class ProductController {

	@Autowired
	private ServiceImplimentation simpl;
	
	@PostMapping("/products")
	public ResponseEntity<String> createProductHandler(@RequestBody Product product) {
		String	result =simpl.addProduct(product);
		return new ResponseEntity<String>(result,HttpStatus.OK );
	}
	
	@GetMapping("/products")
	public ResponseEntity<List<Product>> getProductHandler() throws ProductException {
		List<Product> result =simpl.getAllProduct();
		return new ResponseEntity<List<Product>> (result,HttpStatus.OK );
	}
	@GetMapping("/products/{id}")
	public ResponseEntity<Product> readProductByIdHandler(@PathVariable("id") Integer id) throws ProductException {
		Product	result =simpl.getProductById(id);
		return new ResponseEntity<Product>(result,HttpStatus.OK );
	}
	@PutMapping("/products/{id}")
	public ResponseEntity<String> updateProductHandler(@RequestParam("id") Integer id, @RequestBody Product pro) throws ProductException {
		String	result =simpl.updateProduct(id, pro);
		return new ResponseEntity<String>(result,HttpStatus.OK );
	}
	@DeleteMapping("/products/{id}")
	public ResponseEntity<String> deleteProductHandler(@RequestParam("id") Integer id) throws ProductException {
		String	result =simpl.deleteProduct(id);
		return new ResponseEntity<String>(result,HttpStatus.OK );
	}
	@PostMapping("/products/{productId}/reviews")
	public ResponseEntity<String> createReviewHandler(@RequestParam("productId") Integer productId,@RequestBody Review review) throws ProductException, ReviewException {
		String	result =simpl.createReview(productId, review);
		return new ResponseEntity<String>(result,HttpStatus.OK );
	}
	@DeleteMapping("/products/{productId}/reviews/{reviewId}")
	public ResponseEntity<String> deleteReviewHandler(@RequestParam("productId") Integer productId,@RequestParam("reviewId") Integer reviewId) throws ProductException, ReviewException {
		String	result =simpl.deleteReview(productId, reviewId);
		return new ResponseEntity<String>(result,HttpStatus.OK );
	}
	@GetMapping("/products/{productId}/reviews")
	public ResponseEntity<List<Review>> getReviewsforProductHandler(@RequestParam("id") Integer id) throws ProductException, ReviewException {
		List<Review>	result =simpl.getReviewforProduct(id);
		return new ResponseEntity<List<Review>>(result,HttpStatus.OK );
	}
	
}
